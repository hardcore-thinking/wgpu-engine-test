name: Application build
run-name: ${{ github.actor }} triggered automatic build
on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - name: Build info
        run: |
          echo -e "Build job info:\n" \
            "- Trigger event: ${{ github.event_name }}\n" \
            "- Host OS: ${{ runner.os }}\n" \
            "- Repository: ${{ github.repository }}\n" \
            "- Branch: ${{ github.ref }}"
            
      - name: Install dependencies
        run: "sudo apt install curl libx11-dev unzip & curl -fsSL https://xmake.io/shget.text | bash"
      
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: "echo 'Cloned ${{ github.repository }}'"

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5
        
      - name: Run Build Wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} xmake build -vDy
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
      
      - name: List files
        run: "ls ${{ github.workspace }}"

      - name: Build phase
        run: "xmake build -vDy"
        
      - run: "echo 'Status: ${{ job.status }}'"
